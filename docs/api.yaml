openapi: 3.0.0
info:
  title: User Auth API
  version: 1.0.0
  description: API for user registration, login, user info, and email verification

servers:
  - url: http://localhost:4002

paths:
  /users/auth/signup:
    post:
      summary: Register a new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - surname
                - age
                - email
                - password
              properties:
                name:
                  type: string
                  example: Elina
                surname:
                  type: string
                  example: Petrosyan
                age:
                  type: number
                  example: 20
                email:
                  type: string
                  example: elina@example.com
                password:
                  type: string
                  example: mypassword123
      responses:
        '201':
          description: User created successfully. Verification email sent.
        '400':
          description: Validation error or email already exists
        '500':
          description: Internal server error

  /users/auth/login:
    post:
      summary: Login a user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: elina@example.com
                password:
                  type: string
                  example: mypassword123
      responses:
        '200':
          description: Login successful, returns JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Login successful
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '400':
          description: Wrong credentials or blocked, try again later
        '404':
          description: No user found with such email
        '500':
          description: Internal server error

  /users/user:
    get:
      summary: Get logged-in user info
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User info returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Success
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Elina
                      age:
                        type: number
                        example: 20
                      email:
                        type: string
                        example: elina@example.com
        '400':
          description: User not verified, verification email sent
        '404':
          description: User not found
        '500':
          description: Internal server error

  /users/auth/verify/{token}:
    get:
      summary: Verify user email
      tags:
        - Auth
      parameters:
        - name: token
          in: path
          required: true
          description: Verification token sent by email
          schema:
            type: string
            example: 1234567890abcdef1234567890abcdef
      responses:
        '200':
          description: Email verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email verified successfully. You can now access your data.
        '400':
          description: Invalid or expired verification link
        '500':
          description: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
